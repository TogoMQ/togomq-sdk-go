name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -race ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          release_branches: main
          tag_prefix: v

      - name: Create GitHub Release
        if: steps.tag_version.outputs.new_tag
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Comment on associated PRs
        if: steps.tag_version.outputs.new_tag
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.tag_version.outputs.new_tag }}';
            const commits = context.payload.commits || [];
            
            for (const commit of commits) {
              try {
                const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: commit.id
                });
                
                for (const pr of prs.data) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    body: `ðŸš€ This PR has been released in [${tag}](https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${tag})`
                  });
                }
              } catch (error) {
                console.log(`Could not process commit ${commit.id}: ${error.message}`);
              }
            }
